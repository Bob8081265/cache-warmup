default:
  image: webdevops/php:8.0

cache: &cache
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/
  policy: pull

variables:
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"

stages:
  - build
  - lint
  - sca
  - test
  - deploy

build:
  stage: build
  script:
    - composer install --no-progress
  cache:
    <<: *cache
    policy: pull-push
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:php:
  stage: lint
  needs:
    - build
  script:
    - composer lint -- --dry-run
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

lint:composer:
  stage: lint
  needs:
    - build
  script:
    - composer normalize --dry-run
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

sca:php:
  stage: sca
  needs:
    - build
  before_script:
    - mkdir -p .build
  script:
    - composer sca -- --error-format gitlab > .build/phpstan.json
  artifacts:
    reports:
      codequality: .build/phpstan.json
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

test:
  stage: test
  image: webdevops/php:${PHP_VERSION}
  before_script:
    - mkdir -p .build/coverage
    - composer global require --dev --no-progress --prefer-stable brianium/paratest:"*"
    - >
      if [ "$COVERAGE" == "1" ]; then
        pecl channel-update pecl.php.net
        pecl install pcov
        docker-php-ext-enable pcov
      fi
    - composer self-update --${COMPOSER_VERSION}
    - composer --version
    - php --version
  script:
    - mkdir -p .build/coverage
    - composer require --dev --no-progress "composer/composer:^${COMPOSER_VERSION}.0"
    - >
      if [ "$COVERAGE" == "1" ]; then
        COMPOSER_PROCESS_TIMEOUT=1000 /root/.composer/vendor/bin/paratest --runner=WrapperRunner -c phpunit.coverage.xml --coverage-text
      else
        /root/.composer/vendor/bin/paratest --runner=WrapperRunner -c phpunit.xml
      fi
  parallel:
    matrix:
      - PHP_VERSION: ["7.1", "7.2", "7.3", "7.4"]
        COMPOSER_VERSION: ["1", "2"]
      - PHP_VERSION: "8.0"
        COMPOSER_VERSION: "1"
      - PHP_VERSION: "8.0"
        COMPOSER_VERSION: "2"
        COVERAGE: "1"
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  cache:
    <<: *cache
    key: "${CI_COMMIT_REF_SLUG}-${PHP_VERSION}-${COMPOSER_VERSION}"
    policy: pull-push
  artifacts:
    reports:
      junit: .build/coverage/junit.xml
  rules:
    - if: '$CI_COMMIT_BRANCH'
      when: on_success

# Deploy docker image
deploy:docker:
  stage: deploy
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
