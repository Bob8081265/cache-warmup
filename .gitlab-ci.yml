variables:
  COMPOSER_CACHE_DIR: "/cache/composer"
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"

stages:
  - test
  - deploy

# Test template
.test: &test-template
  stage: test
  image: webdevops/php-dev:${PHP_VERSION}
  script:
    - >
      if [[ "${PHP_VERSION}" == "8.0" ]]; then
        mkdir -p /usr/src/php/ext/xdebug \
          && curl -fsSL https://pecl.php.net/get/xdebug | tar xvz -C "/usr/src/php/ext/xdebug" --strip 1 \
          && docker-php-ext-install xdebug
      fi
    - composer install --no-progress
    - COMPOSER_PROCESS_TIMEOUT=1000 composer test:ci -- --testdox
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: .build/coverage/junit.xml
  only:
    - branches

# Test: PHP 7.1
test:php7.1:
  <<: *test-template
  variables:
    PHP_VERSION: "7.1"
    COMPOSER_VERSION: "1"

# Test: PHP 7.2
test:php7.2:
  <<: *test-template
  variables:
    PHP_VERSION: "7.2"
    COMPOSER_VERSION: "1"

# Test: PHP 7.3
test:php7.3:
  <<: *test-template
  variables:
    PHP_VERSION: "7.3"
    COMPOSER_VERSION: "1"

# Test: PHP 7.4
test:php7.4:
  <<: *test-template
  variables:
    PHP_VERSION: "7.4"
    COMPOSER_VERSION: "1"

# Test: PHP 8.0
test:php8.0:
  <<: *test-template
  variables:
    PHP_VERSION: "8.0"
    COMPOSER_VERSION: "2"
  # Allow failures as long as PHP 8 and Xdebug 3 are not stable
  allow_failure: true

# Deploy docker image
deploy:docker:
  stage: deploy
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
